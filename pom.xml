<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.confluent.connect</groupId>
    <artifactId>kafka-http-source-connector</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Kafka HTTP Source Connector</name>
    <description>A Kafka Connect source connector for ingesting data from HTTP/HTTPS APIs</description>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <kafka.version>3.7.0</kafka.version>
        <kafka.connect.version>3.7.0</kafka.connect.version>
        <confluent.version>7.6.0</confluent.version>
        <jackson.version>2.16.1</jackson.version>
        <okhttp.version>4.12.0</okhttp.version>
        <junit.version>5.10.1</junit.version>
        <mockito.version>5.8.0</mockito.version>
        <slf4j.version>2.0.12</slf4j.version>
        <logback.version>1.4.14</logback.version>
        <testcontainers.version>1.19.3</testcontainers.version>
    </properties>

    <repositories>
        <repository>
            <id>confluent</id>
            <name>Confluent</name>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- Kafka Connect API -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-api</artifactId>
            <version>${kafka.connect.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Kafka Connect Runtime -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-runtime</artifactId>
            <version>${kafka.connect.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Kafka Clients -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Schema Registry Client -->
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry-client</artifactId>
            <version>${confluent.version}</version>
        </dependency>

        <!-- Avro Converter -->
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-connect-avro-converter</artifactId>
            <version>${confluent.version}</version>
        </dependency>

        <!-- JSON Schema Converter -->
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-connect-json-schema-converter</artifactId>
            <version>${confluent.version}</version>
        </dependency>

        <!-- Protobuf Converter -->
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-connect-protobuf-converter</artifactId>
            <version>${confluent.version}</version>
        </dependency>

        <!-- HTTP Client -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp.version}</version>
        </dependency>

        <!-- JSON Processing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- JSON processing utilities -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- OAuth 2.0 Support -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp-urlconnection</artifactId>
            <version>${okhttp.version}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- OpenAPI Support -->
        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser</artifactId>
            <version>2.1.16</version>
        </dependency>

        <!-- Metrics -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>1.11.5</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>${okhttp.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- TestContainers for Integration Testing -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>nginx</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- WireMock for API mocking -->
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8</artifactId>
            <version>2.35.0</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Additional TestContainers modules -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>vault</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- AssertJ for better assertions -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.24.2</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Awaitility for async testing -->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.2</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.1.2</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-connect-maven-plugin</artifactId>
                <version>0.12.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>kafka-connect</goal>
                        </goals>
                        <configuration>
                            <title>Kafka HTTP Source Connector</title>
                            <documentationUrl>https://github.com/your-org/kafka-http-source-connector</documentationUrl>
                            <description>
                                A Kafka Connect source connector for ingesting data from HTTP/HTTPS APIs with support for multiple authentication methods, offset management, and schema registry integration.
                            </description>
                            <logo>assets/http-connector-logo.png</logo>
                            <supportProviderName>Your Organization</supportProviderName>
                            <supportSummary>This connector is supported by Your Organization.</supportSummary>
                            <supportUrl>https://github.com/your-org/kafka-http-source-connector/issues</supportUrl>
                            <supportLogo>assets/support-logo.png</supportLogo>
                            <ownerUsername>your-org</ownerUsername>
                            <ownerType>organization</ownerType>
                            <ownerName>Your Organization</ownerName>
                            <ownerUrl>https://your-org.com</ownerUrl>
                            <ownerLogo>assets/owner-logo.png</ownerLogo>
                            <componentTypes>
                                <componentType>source</componentType>
                            </componentTypes>
                            <tags>
                                <tag>http</tag>
                                <tag>https</tag>
                                <tag>rest</tag>
                                <tag>api</tag>
                                <tag>webhook</tag>
                            </tags>
                            <requirements>
                                <requirement>HTTP/HTTPS API endpoint</requirement>
                                <requirement>Kafka 2.8+ / Confluent Platform 6.2+</requirement>
                            </requirements>
                            <deliveryGuarantee>
                                <deliveryGuarantee>atLeastOnce</deliveryGuarantee>
                            </deliveryGuarantee>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- OWASP Dependency Check Plugin -->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>10.0.4</version>
                <configuration>
                    <!-- NVD API Configuration -->
                    <nvdApiKey>${env.NVD_API_KEY}</nvdApiKey>
                    <nvdApiDelay>16000</nvdApiDelay>
                    <nvdApiEndpoint>https://services.nvd.nist.gov/rest/json/</nvdApiEndpoint>
                    <nvdMaxRetryCount>3</nvdMaxRetryCount>
                    <nvdValidForHours>24</nvdValidForHours>
                    
                    <!-- Graceful handling when API is unavailable -->
                    <failOnError>false</failOnError>
                    
                    <!-- Allow analysis even if database updates fail -->
                    <autoUpdate>false</autoUpdate>
                    <dataDirectory>${project.build.directory}/dependency-check-data</dataDirectory>
                    
                    <!-- Output formats -->
                    <formats>
                        <format>SARIF</format>
                        <format>XML</format>
                        <format>HTML</format>
                        <format>JSON</format>
                    </formats>
                    
                    <!-- Fail build on CVSS >= 7.0 (High severity) only if we have data -->
                    <failBuildOnCVSS>7.0</failBuildOnCVSS>
                    
                    <!-- Skip dependencies with provided scope (Kafka runtime) -->
                    <skipProvidedScope>true</skipProvidedScope>
                    
                    <!-- Skip test dependencies -->
                    <skipTestScope>true</skipTestScope>
                    
                    <!-- Assembly analyzer settings -->
                    <assemblyAnalyzerEnabled>true</assemblyAnalyzerEnabled>
                    
                    <!-- Enable additional analyzers that don't require NVD -->
                    <retirenalyzerEnabled>true</retirenalyzerEnabled>
                    <ossindexAnalyzerEnabled>true</ossindexAnalyzerEnabled>
                    <centralAnalyzerEnabled>true</centralAnalyzerEnabled>
                    
                    <!-- Suppress false positives if needed -->
                    <suppressionFiles>
                        <suppressionFile>owasp-dependency-check-suppressions.xml</suppressionFile>
                    </suppressionFiles>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>